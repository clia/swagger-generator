{
  "name": "clia-swagger-generator",
  "displayName": "Clia Swagger Generator",
  "description": "Generate Swagger description from Rust Web API",
  "version": "0.1.0",
  "publisher": "clia",
  "author": {
    "name": "Cris Liao",
    "email": "clia@163.com"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/clia/swagger-generator/issues",
    "email": "clia@163.com"
  },
  "homepage": "https://github.com/clia/swagger-generator/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/clia/swagger-generator.git"
  },
  "engines": {
    "vscode": "^1.57.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Linters",
    "Programming Languages"
  ],
  "keywords": [
    "Swagger",
    "Generator",
    "Rust",
    "multi-root ready"
  ],
  "activationEvents": [
    "onCommand:clia-swagger-generator.request",
    "onCommand:clia-swagger-generator.history",
    "onCommand:clia-swagger-generator.clear-history",
    "onCommand:clia-swagger-generator.save-response",
    "onCommand:clia-swagger-generator.save-response-body",
    "onCommand:clia-swagger-generator.copy-response-body",
    "onCommand:clia-swagger-generator.switch-environment",
    "onCommand:clia-swagger-generator.clear-aad-token-cache",
    "onCommand:clia-swagger-generator.cancel-request",
    "onCommand:clia-swagger-generator.rerun-last-request",
    "onCommand:clia-swagger-generator.generate-codesnippet",
    "onCommand:clia-swagger-generator.copy-codesnippet",
    "onCommand:clia-swagger-generator.copy-request-as-curl",
    "onCommand:clia-swagger-generator.fold-response",
    "onCommand:clia-swagger-generator.unfold-response",
    "onLanguage:rust",
    "onLanguage:http"
  ],
  "main": "./dist/extension",
  "contributes": {
    "languages": [
      {
        "id": "http",
        "aliases": [
          "HTTP",
          "Http",
          "http"
        ],
        "extensions": [
          ".http",
          ".rest"
        ],
        "firstLine": "^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)\\s+(.*?)HTTP/[0-9\\.]+$",
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "http",
        "scopeName": "source.http",
        "path": "./syntaxes/http.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "http",
        "path": "./snippets/http.json"
      }
    ],
    "commands": [
      {
        "command": "clia-swagger-generator.request",
        "title": "Generate Swagger",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.rerun-last-request",
        "title": "Rerun Last Request",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.cancel-request",
        "title": "Cancel Request",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.switch-environment",
        "title": "Switch Environment",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.history",
        "title": "View Request History",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.clear-history",
        "title": "Clear Request History",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.save-response",
        "title": "Save Swagger.json",
        "icon": {
          "light": "./images/save.svg",
          "dark": "./images/save-inverse.svg"
        },
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.save-response-body",
        "title": "Save Response Body",
        "icon": {
          "light": "./images/save-body.svg",
          "dark": "./images/save-body-inverse.svg"
        },
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.copy-response-body",
        "title": "Copy Response Body",
        "icon": {
          "light": "./images/copy.svg",
          "dark": "./images/copy-inverse.svg"
        },
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.generate-codesnippet",
        "title": "Generate Code Snippet",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.copy-codesnippet",
        "title": "Copy Code Snippet",
        "icon": {
          "light": "./images/copy.svg",
          "dark": "./images/copy-inverse.svg"
        },
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.copy-request-as-curl",
        "title": "Copy Request As cURL",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.clear-aad-token-cache",
        "title": "Clear Azure AD Token Cache",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.fold-response",
        "title": "Fold Response",
        "category": "Clia Swagger Generator"
      },
      {
        "command": "clia-swagger-generator.unfold-response",
        "title": "Unfold Response",
        "category": "Clia Swagger Generator"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "clia-swagger-generator.fold-response",
          "when": "cliaSwaggerPreviewFocus"
        },
        {
          "command": "clia-swagger-generator.unfold-response",
          "when": "cliaSwaggerPreviewFocus"
        },
        {
          "command": "clia-swagger-generator.save-response",
          "when": "cliaSwaggerPreviewFocus"
        },
        {
          "command": "clia-swagger-generator.save-response-body",
          "when": "cliaSwaggerPreviewFocus"
        },
        {
          "command": "clia-swagger-generator.copy-response-body",
          "when": "cliaSwaggerPreviewFocus"
        },
        {
          "command": "clia-swagger-generator.copy-codesnippet",
          "when": "codeSnippetPreviewFocus"
        }
      ],
      "editor/title": [
        {
          "when": "cliaSwaggerPreviewFocus",
          "command": "clia-swagger-generator.save-response",
          "group": "navigation@1"
        },
        {
          "when": "cliaSwaggerPreviewFocus",
          "command": "clia-swagger-generator.copy-response-body",
          "group": "navigation@2"
        },
        {
          "when": "cliaSwaggerPreviewFocus",
          "command": "clia-swagger-generator.fold-response",
          "group": "1_clia-swagger-generator@1"
        },
        {
          "when": "cliaSwaggerPreviewFocus",
          "command": "clia-swagger-generator.unfold-response",
          "group": "1_clia-swagger-generator@2"
        },
        {
          "when": "codeSnippetPreviewFocus",
          "command": "clia-swagger-generator.copy-codesnippet",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "clia-swagger-generator.request",
          "when": "editorTextFocus && editorLangId == http",
          "group": "clia-swagger-generator@1"
        },
        {
          "command": "clia-swagger-generator.generate-codesnippet",
          "when": "editorTextFocus && editorLangId == http",
          "group": "clia-swagger-generator@2"
        },
        {
          "command": "clia-swagger-generator.copy-request-as-curl",
          "when": "editorTextFocus && editorLangId == http",
          "group": "clia-swagger-generator@3"
        }
      ]
    },
    "keybindings": [
      {
        "command": "clia-swagger-generator.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "clia-swagger-generator.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "clia-swagger-generator.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "clia-swagger-generator.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "clia-swagger-generator.rerun-last-request",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "cliaSwaggerPreviewFocus"
      },
      {
        "command": "clia-swagger-generator.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "clia-swagger-generator.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "clia-swagger-generator.history",
        "key": "ctrl+alt+h",
        "mac": "cmd+alt+h"
      },
      {
        "command": "clia-swagger-generator.switch-environment",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e"
      },
      {
        "command": "clia-swagger-generator.generate-codesnippet",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "clia-swagger-generator.generate-codesnippet",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Clia Swagger Generator",
      "properties": {
        "clia-swagger-generator.followredirect": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Follow HTTP 3xx responses as redirects."
        },
        "clia-swagger-generator.defaultHeaders": {
          "type": "object",
          "default": {
            "User-Agent": "vscode-restclient"
          },
          "scope": "resource",
          "description": "If particular headers are omitted in request headers, these will be added as headers for each request."
        },
        "clia-swagger-generator.timeoutinmilliseconds": {
          "type": "integer",
          "default": 0,
          "scope": "resource",
          "description": "Timeout in milliseconds. 0 for infinity"
        },
        "clia-swagger-generator.showResponseInDifferentTab": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Show response in different tab"
        },
        "clia-swagger-generator.requestNameAsResponseTabTitle": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Show request name as the response tab title"
        },
        "clia-swagger-generator.rememberCookiesForSubsequentRequests": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Remember cookies for subsequent requests"
        },
        "clia-swagger-generator.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Send out anonymous usage data"
        },
        "clia-swagger-generator.excludeHostsForProxy": {
          "type": "array",
          "default": [],
          "scope": "resource",
          "description": "Excluded hosts when using using proxy settings"
        },
        "clia-swagger-generator.fontSize": {
          "type": "number",
          "scope": "resource",
          "markdownDescription": "Controls the font size in pixels used in the response preview. When set to `0`, the value of `#editor.fontSize#` is used."
        },
        "clia-swagger-generator.fontFamily": {
          "type": "string",
          "default": null,
          "scope": "resource",
          "description": "Controls the font family used in the response preview"
        },
        "clia-swagger-generator.fontWeight": {
          "type": "string",
          "enum": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "scope": "resource",
          "description": "Controls the font weight used in the response preview"
        },
        "clia-swagger-generator.environmentVariables": {
          "type": "object",
          "default": {
            "$shared": {}
          },
          "scope": "resource",
          "markdownDescription": "Sets the environments and custom variables belongs to it, especially the special environment name '$shared' is used to create variables shared across all the individual environments (e.g., `{\"$shared\": {\"version\": \"v1\"}, \"production\": {\"host\": \"api.example.com\"}, \"sandbox\":{\"host\":\"sandbox.api.example.com\"}}`)",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "default": {},
                "description": "Sets the custom variables belong to this environment",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string",
                      "description": "Value of the custom variable"
                    }
                  ]
                }
              }
            ]
          }
        },
        "clia-swagger-generator.mimeAndFileExtensionMapping": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "markdownDescription": "Sets the custom mapping of mime type and file extension of saved response body (e.g., `{\"application/atom+xml\": \"xml\"}`)"
        },
        "clia-swagger-generator.previewResponseInUntitledDocument": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Preview response in untitled document if set to true, otherwise displayed in html view"
        },
        "clia-swagger-generator.certificates": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "description": "Certificate paths for different hosts. The path can be absolute path or relative path(relative to workspace or current http file)",
          "pattern": "^(?!http(s?)://)",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "default": {},
                "description": "Certifcate paths for specific host(e.g., foo.com, bar.org:8081), port is optional",
                "properties": {
                  "cert": {
                    "type": "string",
                    "description": "Absolute or relative path of Public x509 certificate"
                  },
                  "key": {
                    "type": "string",
                    "description": "Absolute or relative path of Private key"
                  },
                  "pfx": {
                    "type": "string",
                    "description": "Absolute or relative path of PKCS #12 certificate"
                  },
                  "passphrase": {
                    "type": "string",
                    "description": "[Optional] A string of passphrase for the private key or pfx"
                  }
                },
                "dependencies": {
                  "cert": [
                    "key"
                  ],
                  "key": [
                    "cert"
                  ]
                }
              }
            ]
          }
        },
        "clia-swagger-generator.suppressResponseBodyContentTypeValidationWarning": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Suppress response body content type validation"
        },
        "clia-swagger-generator.previewOption": {
          "type": "string",
          "enum": [
            "full",
            "headers",
            "body",
            "exchange"
          ],
          "enumDescriptions": [
            "Response headers, body and status line",
            "Response headers and status line",
            "Response body only",
            "Whole HTTP exchange including both request and response"
          ],
          "default": "full",
          "scope": "resource",
          "description": "Response preview output option"
        },
        "clia-swagger-generator.disableHighlightResonseBodyForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Controls whether to highlight response body for response whose size is larger than limit specified by `clia-swagger-generator.largeResponseSizeLimitInMB`"
        },
        "clia-swagger-generator.disableAddingHrefLinkForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Controls whether to add href link in previewed response for response whose size is larger than limit specified by `clia-swagger-generator.largeResponseSizeLimitInMB`"
        },
        "clia-swagger-generator.largeResponseBodySizeLimitInMB": {
          "type": "number",
          "default": 5,
          "minimum": 0,
          "exclusiveMinimum": true,
          "scope": "resource",
          "markdownDescription": "Set the response body size threshold of MB to identify whether a response is a so-called 'large response', only used when `clia-swagger-generator.disableHighlightResonseBodyForLargeResponse` and/or `clia-swagger-generator.disableAddingHrefLinkForLargeResponse` is set to true"
        },
        "clia-swagger-generator.previewColumn": {
          "type": "string",
          "enum": [
            "current",
            "beside"
          ],
          "markdownEnumDescriptions": [
            "Preview in the column of current request file",
            "previewing at the side of the current active column and the side direction depends on `workbench.editor.openSideBySideDirection` setting, either right or below the current editor column"
          ],
          "default": "beside",
          "scope": "resource",
          "description": "Response preview column option"
        },
        "clia-swagger-generator.previewResponsePanelTakeFocus": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Preview response panel will take focus after receiving response."
        },
        "clia-swagger-generator.formParamEncodingStrategy": {
          "type": "string",
          "enum": [
            "automatic",
            "never",
            "always"
          ],
          "markdownEnumDescriptions": [
            "Detecting encoding or not automatically and do the encoding job if necessary",
            "Treat provided request body as is, no encoding job will be applied",
            "Use for the scenario that `automatic` option not working properly, e.g., some special characters(`+`) are not encoded correctly"
          ],
          "default": "automatic",
          "scope": "resource",
          "markdownDescription": "Form param encoding strategy for request body of `x-www-form-urlencoded`."
        },
        "clia-swagger-generator.addRequestBodyLineIndentationAroundBrackets": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Add line indentation around brackets(`{}`, `<>`, `[]`) in request body when pressing enter."
        },
        "clia-swagger-generator.decodeEscapedUnicodeCharacters": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Decode escaped unicode characters in response body."
        },
        "clia-swagger-generator.logLevel": {
          "type": "string",
          "enum": [
            "error",
            "warn",
            "info",
            "verbose"
          ],
          "default": "error",
          "scope": "resource",
          "description": "The verbosity of logging in the REST output panel"
        },
        "clia-swagger-generator.enableSendRequestCodeLens": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Enable/disable sending request CodeLens in request file"
        },
        "clia-swagger-generator.enableCustomVariableReferencesCodeLens": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Enable/disable custom variable references CodeLens in request file"
        },
        "clia-swagger-generator.urlSignConfiguration": {
          "type": "object",
          "default": {
            "enableUrlSign": true,
            "algorithm": {
              "step1OrderParams": true,
              "step1UrlEncodeParams": true,
              "step1PercentEncode": false,
              "step1AddEqual": false,
              "step1AddAnd": false,
              "step2SeparatorAnd": false,
              "step2AddHttpMethod": false,
              "step2AddPercentEncodeSlash": false,
              "step2PercentEncode": false,
              "step3ComputeAlgorithm": "md5",
              "step3SecretAppend": "",
              "step3TextAlgorithm": "hex"
            },
            "keyParamName": "appkey",
            "signParamName": "sign"
          },
          "scope": "resource",
          "markdownDescription": "Sets the URL Signature configuration"
        },
        "clia-swagger-generator.urlSignKeySecrets": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "markdownDescription": "Sets the key and secret pairs for URL Signature"
        },
        "clia-swagger-generator.useContentDispositionFilename": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Enable/disable using filename from 'content-disposition' header, when saving response body"
        },
        "clia-swagger-generator.host": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "Swagger host"
        },
        "clia-swagger-generator.basePath": {
          "type": "string",
          "default": "/",
          "scope": "resource",
          "description": "Swagger basePath"
        },
        "clia-swagger-generator.schemes": {
          "type": "string",
          "default": "https",
          "scope": "resource",
          "description": "Swagger schemes, example: http,https"
        }
      }
    },
    "configurationDefaults": {
      "[http]": {
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "watch": "webpack --mode development --watch --info-verbosity verbose",
    "tslint": "tslint --project tsconfig.json"
  },
  "devDependencies": {
    "@types/aws4": "^1.5.1",
    "@types/fs-extra": "^5.0.4",
    "@types/got": "^9.6.8",
    "@types/mocha": "^5.2.6",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.57.0",
    "mocha": "^6.1.4",
    "ts-loader": "^5.3.2",
    "tslint": "^6.1.2",
    "typescript": "^3.7.3",
    "webpack": "^4.26.0",
    "webpack-cli": "^3.1.0"
  },
  "dependencies": {
    "adal-node": "^0.1.26",
    "applicationinsights": "^1.0.5",
    "aws4": "^1.9.1",
    "code-highlight-linenums": "^0.2.1",
    "combined-stream": "^1.0.5",
    "content-disposition": "^0.5.3",
    "dayjs": "^1.8.20",
    "dotenv": "^8.2.0",
    "encodeurl": "^1.0.1",
    "filesize": "^3.3.0",
    "fs-extra": "^5.0.0",
    "got": "^9.6.0",
    "highlight.js": "^10.4.1",
    "http-proxy-agent": "^2.1.0",
    "https-proxy-agent": "^2.2.3",
    "httpsnippet": "^1.22.0",
    "iconv-lite": "^0.4.15",
    "jsonc-parser": "^2.0.2",
    "jsonpath-plus": "^0.20.1",
    "mime-types": "^2.1.14",
    "pretty-data": "^0.40.0",
    "tough-cookie": "^3.0.1",
    "tough-cookie-file-store-bugfix": "Huachao/tough-cookie-file-store-bugfix",
    "uuid": "^3.3.2",
    "xmldom": "^0.5.0",
    "xpath": "^0.0.27",
    "yargs-parser": "~11.1.1"
  }
}
